plugins {
    id("fabric-loom")
    id("me.modmuss50.mod-publish-plugin") version("${publisher_plugin_version}")
}

base {
    archivesName = "${mod_name}-${mod_version}-${minecraft_version}-fabric"

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    // Base
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings(loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:${fabric_mappings_channel}-${fabric_mappings_channel_version}@zip")
    })

    modImplementation("net.fabricmc:fabric-loader:${fabric_loader_version}")

    implementation project(":common")

    // Dependencies (Mandatory)
    modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_api_version}")

    // Dependencies (Optional)
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${fabric_jei_version}")
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${fabric_jei_version}")

    modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${fabric_jei_version}")

    modCompileOnly("squeek.appleskin:appleskin-fabric:${fabric_appleskin_version}:api") { transitive = false }

    modImplementation("com.terraformersmc:modmenu:${fabric_modmenu_version}")
}

loom {
    mods {
        mod_id {
            sourceSet sourceSets.main
        }
    }

    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }

    mixin { defaultRefmapName.set("${mod_id}.refmap.json") }

    runs {
        client {
            client()
            setConfigName("${fabric_client_taskname}")
            ideConfigGenerated(true)
            runDir("run")
            vmArgs("-Xms12G", "-Xmx16G", "-XX:+UseG1GC", "-XX:+UnlockExperimentalVMOptions", "-XX:MaxGCPauseMillis=100", "-XX:+DisableExplicitGC", "-XX:TargetSurvivorRatio=90", "-XX:G1NewSizePercent=35", "-XX:G1MaxNewSizePercent=60", "-XX:G1MixedGCLiveThresholdPercent=50", "-XX:+AlwaysPreTouch")
        }
        server {
            server()
            serverWithGui()
            setConfigName("${fabric_server_taskname}")
            ideConfigGenerated(true)
            runDir("run")
            vmArgs("-Xms12G", "-Xmx16G", "-XX:+UseG1GC", "-XX:+UnlockExperimentalVMOptions", "-XX:MaxGCPauseMillis=100", "-XX:+DisableExplicitGC", "-XX:TargetSurvivorRatio=90", "-XX:G1NewSizePercent=35", "-XX:G1MaxNewSizePercent=60", "-XX:G1MixedGCLiveThresholdPercent=50", "-XX:+AlwaysPreTouch")
        }
        datagen {
            inherit server
            setConfigName("${fabric_data_taskname}")

            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${project(':common').file('src/generated/resources')}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"

            runDir "build/datagen"

            vmArgs("-Xms12G", "-Xmx16G", "-XX:+UseG1GC", "-XX:+UnlockExperimentalVMOptions", "-XX:MaxGCPauseMillis=100", "-XX:+DisableExplicitGC", "-XX:TargetSurvivorRatio=90", "-XX:G1NewSizePercent=35", "-XX:G1MaxNewSizePercent=60", "-XX:G1MixedGCLiveThresholdPercent=50", "-XX:+AlwaysPreTouch")
        }
    }
}

tasks.withType(JavaCompile).configureEach { source(project(":common").sourceSets.main.allSource) }
tasks.withType(Javadoc).configureEach { source(project(":common").sourceSets.main.allJava) }
tasks.named("sourcesJar", Jar) { from(project(":common").sourceSets.main.allSource) }

processResources {
    from project(":common").sourceSets.main.resources
    from project(':common').file('src/generated/resources/')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = base.archivesName.get()
            version = mod_version

            from components.java
        }
    }
}

publishMods {
    file = jar.archiveFile
    changelog = file("CHANGELOG.md").getText()
    version = "${mod_version}-${minecraft_version}"
    displayName = "${mod_name} v${mod_version}-${minecraft_version}"
    type = STABLE

    modLoaders.add("fabric")

    curseforge {
        projectId = ""
        projectSlug = "vfxlib"
        accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
        announcementTitle = "New VFXLib CurseForge Release"

        getMinecraftVersions().add(minecraft_version)
    }

    modrinth {
        projectId = ""
        accessToken = providers.environmentVariable("MODRINTH_API_KEY")
        announcementTitle = "New VFXLib Modrinth Release"

        getMinecraftVersions().add(minecraft_version)
    }
}